(declare-const pal (Array Int Int))

(declare-const a (Array Int Bool))
(declare-const b (Array Int Bool))
(declare-const c (Array Int Bool))
(declare-const d (Array Int Bool))
(declare-const e (Array Int Bool))
(declare-const f (Array Int Bool))
(declare-const g (Array Int Bool))
(declare-const h (Array Int Bool))

(define-fun p0 ((x Int)) Int
  (+ (if (select h x) 8 0)
     (if (select f x) 4 0)
     (if (select d x) 2 0)
     (if (select b x) 1 0)))

(define-fun p1 ((x Int)) Int
  (+ (if (select g x) 8 0)
     (if (select e x) 4 0)
     (if (select c x) 2 0)
     (if (select a x) 1 0)))

(define-fun p2 ((x Int)) Int
  (+ (if (select f x) 8 0)
     (if (select d x) 4 0)
     (if (select b x) 2 0)
     1))

(define-fun p3 ((x Int)) Int
  (+ (if (select e x) 8 0)
     (if (select c x) 4 0)
     (if (select a x) 2 0)
     1))

(assert (= (select pal (p0 0)) 0))
(assert (= (select pal (p1 0)) 0))
(assert (= (select pal (p2 0)) 0))
(assert (= (select pal (p3 0)) 0))

(assert (= (select pal (p0 1)) 0))
(assert (= (select pal (p1 1)) 1))
(assert (= (select pal (p2 1)) 0))
(assert (= (select pal (p3 1)) 1))

(assert (= (select pal (p0 2)) 1))
(assert (= (select pal (p1 2)) 1))
(assert (= (select pal (p2 2)) 1))
(assert (= (select pal (p3 2)) 1))

(assert (= (select pal (p0 3)) 1))
(assert (= (select pal (p1 3)) 3))
(assert (= (select pal (p2 3)) 1))
(assert (= (select pal (p3 3)) 3))

(assert (= (select pal (p0 4)) 3))
(assert (= (select pal (p1 4)) 3))
(assert (= (select pal (p2 4)) 3))
(assert (= (select pal (p3 4)) 3))

(assert (= (select pal (p0 5)) 2))
(assert (= (select pal (p1 5)) 3))
(assert (= (select pal (p2 5)) 2))
(assert (= (select pal (p3 5)) 3))

(assert (= (select pal (p0 6)) 2))
(assert (= (select pal (p1 6)) 2))
(assert (= (select pal (p2 6)) 2))
(assert (= (select pal (p3 6)) 2))

(assert (= (select pal (p0 7)) 6))
(assert (= (select pal (p1 7)) 2))
(assert (= (select pal (p2 7)) 6))
(assert (= (select pal (p3 7)) 2))

(assert (= (select pal (p0 8)) 6))
(assert (= (select pal (p1 8)) 6))
(assert (= (select pal (p2 8)) 6))
(assert (= (select pal (p3 8)) 6))

(assert (= (select pal (p0 9)) 6))
(assert (= (select pal (p1 9)) 6))
(assert (= (select pal (p2 9)) 6))
(assert (= (select pal (p3 9)) 4))

(assert (= (select pal (p0 10)) 6))
(assert (= (select pal (p1 10)) 4))
(assert (= (select pal (p2 10)) 6))
(assert (= (select pal (p3 10)) 4))

(assert (= (select pal (p0 11)) 6))
(assert (= (select pal (p1 11)) 4))
(assert (= (select pal (p2 11)) 5))
(assert (= (select pal (p3 11)) 4))

(assert (= (select pal (p0 12)) 5))
(assert (= (select pal (p1 12)) 4))
(assert (= (select pal (p2 12)) 1))
(assert (= (select pal (p3 12)) 4))

(assert (= (select pal (p0 13)) 4))
(assert (= (select pal (p1 13)) 4))
(assert (= (select pal (p2 13)) 4))
(assert (= (select pal (p3 13)) 4))

(assert (= (select pal (p0 14)) 4))
(assert (= (select pal (p1 14)) 0))
(assert (= (select pal (p2 14)) 4))
(assert (= (select pal (p3 14)) 0))

(assert (= (select pal (p0 15)) 0))
(assert (= (select pal (p1 15)) 0))
(assert (= (select pal (p2 15)) 0))
(assert (= (select pal (p3 15)) 0))

(define-fun pixel ((x Int)) Int
  (+ (if (select h x) 128 0)
     (if (select g x) 64 0)
     (if (select f x) 32 0)
     (if (select e x) 16 0)
     (if (select d x) 8 0)
     (if (select c x) 4 0)
     (if (select b x) 2 0)
     (if (select a x) 1 0)))

(check-sat)
(get-model)

(echo "pal:")
(eval (select pal 0))
(eval (select pal 1))
(eval (select pal 2))
(eval (select pal 3))
(eval (select pal 4))
(eval (select pal 5))
(eval (select pal 6))
(eval (select pal 7))
(eval (select pal 8))
(eval (select pal 9))
(eval (select pal 10))
(eval (select pal 11))
(eval (select pal 12))
(eval (select pal 13))
(eval (select pal 14))
(eval (select pal 15))


(echo "colours:")
(eval (pixel 0))
(eval (pixel 1))
(eval (pixel 2))
(eval (pixel 3))
(eval (pixel 4))
(eval (pixel 5))
(eval (pixel 6))
(eval (pixel 7))
(eval (pixel 8))
(eval (pixel 9))
(eval (pixel 10))
(eval (pixel 11))
(eval (pixel 12))
(eval (pixel 13))
(eval (pixel 14))
(eval (pixel 15))
